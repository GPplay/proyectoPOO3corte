/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Episodio;
import logica.Heroe;
import logica.Personaje;
import logica.Serie;
import logica.Villano;

/**
 *
 * @author Gybram
 */
public class VistaSerie extends javax.swing.JFrame {

    private Serie serie;

    /**
     * Creates new form VistaSerie
     */

    public VistaSerie() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public VistaSerie(Serie serie) {
        
        initComponents();
        this.setLocationRelativeTo(null);
        nombreSerie.setText(serie.getNombre());
        cantidadDeEpisodios.setText("" + serie.getCantidadEpisodio());
        this.serie = serie;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreSerie = new javax.swing.JLabel();
        cantidadDeEpisodios = new javax.swing.JLabel();
        jLabelCantEpisodios = new javax.swing.JLabel();
        jPanelPestañasEpisodio = new javax.swing.JTabbedPane();
        jPanelAgregarEpisodio = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TextFieldNombreEpisodio = new javax.swing.JTextField();
        btnGuardarEpisodio = new javax.swing.JButton();
        jPanelAgregarPersonaje = new javax.swing.JPanel();
        jTabbedAgregarPersonaje = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nombreHeroe = new javax.swing.JTextField();
        ChechBoxPerteneceALiga = new javax.swing.JCheckBox();
        jTabbedHabilidadHeroe = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        debilidadHeroe = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaHabildadesHeroe = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextFieldHabilidadHeroe = new javax.swing.JTextArea();
        btnAgregarHabilidadHeroe = new javax.swing.JButton();
        btnGuardarHeroe = new javax.swing.JButton();
        identidadSecretaHeroe = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nombreVillano = new javax.swing.JTextField();
        identidadSecretaVillano = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        descripcionAtaqueVillano = new javax.swing.JTextArea();
        checkBoxUsaArma = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        listEnemigoVillano = new javax.swing.JComboBox<>();
        btnGuardarVillano = new javax.swing.JButton();
        ComboBoxListaDeEpisodios = new javax.swing.JComboBox<>();
        jPanelEpisodios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDeEpisodios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nombreSerie.setText("nombre_serie");

        cantidadDeEpisodios.setText("0");

        jLabelCantEpisodios.setText("Cantidad de episodios:");

        jLabel3.setText("Nombre:");

        TextFieldNombreEpisodio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldNombreEpisodioActionPerformed(evt);
            }
        });

        btnGuardarEpisodio.setText("Guardar");
        btnGuardarEpisodio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarEpisodioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAgregarEpisodioLayout = new javax.swing.GroupLayout(jPanelAgregarEpisodio);
        jPanelAgregarEpisodio.setLayout(jPanelAgregarEpisodioLayout);
        jPanelAgregarEpisodioLayout.setHorizontalGroup(
            jPanelAgregarEpisodioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarEpisodioLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelAgregarEpisodioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardarEpisodio)
                    .addGroup(jPanelAgregarEpisodioLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextFieldNombreEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanelAgregarEpisodioLayout.setVerticalGroup(
            jPanelAgregarEpisodioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarEpisodioLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelAgregarEpisodioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TextFieldNombreEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addComponent(btnGuardarEpisodio)
                .addContainerGap(372, Short.MAX_VALUE))
        );

        jPanelPestañasEpisodio.addTab("Agregar Episodio", jPanelAgregarEpisodio);

        jLabel4.setText("Nombre:");

        ChechBoxPerteneceALiga.setText("Pertenece a la liga de la justicia");

        debilidadHeroe.setColumns(20);
        debilidadHeroe.setRows(5);
        jScrollPane4.setViewportView(debilidadHeroe);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedHabilidadHeroe.addTab("Debilidad", jPanel3);

        listaHabildadesHeroe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre habilidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaHabildadesHeroe.getTableHeader().setReorderingAllowed(false);
        listaHabildadesHeroe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaHabildadesHeroeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listaHabildadesHeroe);
        if (listaHabildadesHeroe.getColumnModel().getColumnCount() > 0) {
            listaHabildadesHeroe.getColumnModel().getColumn(0).setResizable(false);
        }

        TextFieldHabilidadHeroe.setColumns(20);
        TextFieldHabilidadHeroe.setRows(5);
        jScrollPane2.setViewportView(TextFieldHabilidadHeroe);

        btnAgregarHabilidadHeroe.setText("Agregar Habilidad");
        btnAgregarHabilidadHeroe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarHabilidadHeroeActionPerformed(evt);
            }
        });

        btnGuardarHeroe.setText("Guardar");
        btnGuardarHeroe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarHeroeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardarHeroe))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarHabilidadHeroe))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(btnAgregarHabilidadHeroe))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btnGuardarHeroe)
                .addContainerGap())
        );

        jTabbedHabilidadHeroe.addTab("Lista de habilidades", jPanel6);

        jLabel6.setText("Identidad Secreta:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedHabilidadHeroe)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nombreHeroe, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                            .addComponent(identidadSecretaHeroe)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(ChechBoxPerteneceALiga)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombreHeroe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(identidadSecretaHeroe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChechBoxPerteneceALiga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedHabilidadHeroe, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
        );

        jTabbedAgregarPersonaje.addTab("Heroe", jPanel4);

        jLabel5.setText("Nombre:");

        jLabel7.setText("Identidad Secreta:");

        jLabel8.setText("Descripción ataque:");

        descripcionAtaqueVillano.setColumns(20);
        descripcionAtaqueVillano.setRows(5);
        jScrollPane5.setViewportView(descripcionAtaqueVillano);

        checkBoxUsaArma.setText("Usa arma");
        checkBoxUsaArma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxUsaArmaActionPerformed(evt);
            }
        });

        jLabel1.setText("Enemigo:");

        btnGuardarVillano.setText("Guardar");
        btnGuardarVillano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarVillanoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(checkBoxUsaArma)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nombreVillano, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                    .addComponent(identidadSecretaVillano)
                    .addComponent(listEnemigoVillano, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnGuardarVillano)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nombreVillano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(identidadSecretaVillano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxUsaArma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(listEnemigoVillano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnGuardarVillano)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jTabbedAgregarPersonaje.addTab("Villano", jPanel5);

        ComboBoxListaDeEpisodios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxListaDeEpisodiosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAgregarPersonajeLayout = new javax.swing.GroupLayout(jPanelAgregarPersonaje);
        jPanelAgregarPersonaje.setLayout(jPanelAgregarPersonajeLayout);
        jPanelAgregarPersonajeLayout.setHorizontalGroup(
            jPanelAgregarPersonajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarPersonajeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAgregarPersonajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxListaDeEpisodios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedAgregarPersonaje))
                .addContainerGap())
        );
        jPanelAgregarPersonajeLayout.setVerticalGroup(
            jPanelAgregarPersonajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAgregarPersonajeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ComboBoxListaDeEpisodios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedAgregarPersonaje, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelPestañasEpisodio.addTab("Agregar Personaje", jPanelAgregarPersonaje);

        tablaDeEpisodios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Costo episodio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaDeEpisodios);

        javax.swing.GroupLayout jPanelEpisodiosLayout = new javax.swing.GroupLayout(jPanelEpisodios);
        jPanelEpisodios.setLayout(jPanelEpisodiosLayout);
        jPanelEpisodiosLayout.setHorizontalGroup(
            jPanelEpisodiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEpisodiosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelEpisodiosLayout.setVerticalGroup(
            jPanelEpisodiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEpisodiosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelPestañasEpisodio.addTab("Episodios", jPanelEpisodios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPestañasEpisodio)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nombreSerie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelCantEpisodios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidadDeEpisodios, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSerie)
                    .addComponent(cantidadDeEpisodios)
                    .addComponent(jLabelCantEpisodios))
                .addGap(72, 72, 72)
                .addComponent(jPanelPestañasEpisodio)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarVillanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarVillanoActionPerformed
        String episodioSeleccionado = (String) ComboBoxListaDeEpisodios.getSelectedItem();
        Episodio episodio = this.serie.getEpisodioPorNombre(episodioSeleccionado);
        
        if(episodio == null){
            JOptionPane.showMessageDialog(null, "Episodio no encontrado");
        }
        // obtenemos nombre del villano
        String nombre = nombreVillano.getText();
        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta nombre del Villano", "Nombre", 2);
            return;
        }
        // Obtenemos Id. secreta del Villano
        String identidadSecreta = identidadSecretaVillano.getText();
        if (identidadSecreta.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta la identidad del Villano", "Nombre", 2);
            return;
        }
        
        //obtener Descripcion Ataque  villano
        String DescripAtaqueVillano = descripcionAtaqueVillano.getText();
        if(DescripAtaqueVillano.equals("")){
            JOptionPane.showMessageDialog(null, "Debe introducir una descripcion de ataque", "Nombre", 2);
            return;
        }
        
        //obtener Heroe enemigo
        String nombreHeroeABuscar= (String)listEnemigoVillano.getSelectedItem();
        Episodio ep = this.serie.getEpisodioPorNombre(episodioSeleccionado);
        Heroe heroe  = (Heroe) ep.buscarHeroe(nombreHeroeABuscar);//castear como un parseInt
        
        
        Villano villano= new Villano(DescripAtaqueVillano, checkBoxUsaArma.isSelected(), heroe, nombre, identidadSecreta);
        episodio.agregarPersonaje(villano);
        heroe.agregarEnemigo(villano);
        this.limpiarFormularioVillano();
        
    }//GEN-LAST:event_btnGuardarVillanoActionPerformed

    private void checkBoxUsaArmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxUsaArmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxUsaArmaActionPerformed

    private void btnGuardarHeroeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarHeroeActionPerformed
        // TODO add your handling code here:
        // obtener episodio
        String episodioSeleccionado = (String) ComboBoxListaDeEpisodios.getSelectedItem();
        Episodio episodio = this.serie.getEpisodioPorNombre(episodioSeleccionado);
        if(episodio == null){
            JOptionPane.showMessageDialog(null, "Episodio no encontrada");
        }
        // obtenemos nombre del heroe
        String nombre = nombreHeroe.getText();
        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta nombre de heroe", "Nombre", 3);
            return;
        }
        

        // obtener identidad secreta
        String identidadSecreta = identidadSecretaHeroe.getText();
        if (identidadSecreta.equals("")) {
            JOptionPane.showMessageDialog(null, "Falta la identidad del heroe", "Nombre", 3);
            return;
        }
        // obtener la lista de habilidades
        int listaHabilidadesCount = listaHabildadesHeroe.getRowCount();
        if (listaHabilidadesCount == 0) {
            // mensaje de error
        }
        ArrayList<String> habilidades = new ArrayList();
        for (int i = 0; i < listaHabilidadesCount; i++) {
            String value = listaHabildadesHeroe.getValueAt(i, 0).toString();
            habilidades.add(value);
        }

        // obtener la debilidad
        String debilidad = debilidadHeroe.getText();

        Heroe heroe = new Heroe(debilidad, ChechBoxPerteneceALiga.isSelected(), nombre, identidadSecreta, habilidades);
        
        episodio.agregarPersonaje(heroe);
        
        this.limpiarFormularioHeroe();
    }//GEN-LAST:event_btnGuardarHeroeActionPerformed

    public void limpiarFormularioHeroe(){
        nombreHeroe.setText("");
        identidadSecretaHeroe.setText("");
        debilidadHeroe.setText("");
        ChechBoxPerteneceALiga.setSelected(false);
        DefaultTableModel tabla = (DefaultTableModel) listaHabildadesHeroe.getModel();
        tabla.setRowCount(0);
        this.recargarEpisodios();
    }
    
    public void limpiarFormularioVillano(){
        nombreVillano.setText("");
        identidadSecretaVillano.setText("");
        checkBoxUsaArma.setSelected(false);
        descripcionAtaqueVillano.setText("");
        listEnemigoVillano.setSelectedIndex(0);
        this.recargarEpisodios();
    }
    
    private void listaHabildadesHeroeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaHabildadesHeroeMouseClicked
        // se obtiene el index de la fila
    }//GEN-LAST:event_listaHabildadesHeroeMouseClicked

    private void btnAgregarHabilidadHeroeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarHabilidadHeroeActionPerformed
        // TODO add your handling code here:
        String habilidad = TextFieldHabilidadHeroe.getText();

        // rellena nuevamente la tabla con la el ArrayList de episodios
        if(habilidad.isBlank()){
            JOptionPane.showMessageDialog(null, "vacio, rellena el espacio ", "Habilidad", 2);

        }
        else if(!"".equals(habilidad)){

            DefaultTableModel model = (DefaultTableModel) listaHabildadesHeroe.getModel();
            Object[] row = {habilidad};
            model.addRow(row);

            listaHabildadesHeroe.getValueAt(0, 0);
        }
        else{
            JOptionPane.showMessageDialog(null, "no puede quedar en blanco", "Nombre", 3);
        }
    }//GEN-LAST:event_btnAgregarHabilidadHeroeActionPerformed

    private void TextFieldNombreEpisodioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldNombreEpisodioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldNombreEpisodioActionPerformed

    private void btnGuardarEpisodioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarEpisodioActionPerformed
        // TODO add your handling code here:
        String nombre = TextFieldNombreEpisodio.getText();
        
        if(nombre.equals("")){
            JOptionPane.showMessageDialog(null, "Escriba el nombre del episodio");
            return;
        }
        
            
        boolean existencia = false;   
        for(Episodio ep : this.serie.getEpisodios()){
            if(ep.getNombre().equalsIgnoreCase((nombre))){
              JOptionPane.showMessageDialog(null, "el nombre de un episodio No se puede repetir"); 
              existencia = true;
            }
            
        }
        if(existencia == false){
            Episodio episodio = new Episodio(nombre);
            serie.agregarEpisodio(episodio);
            this.recargarEpisodios();
            TextFieldNombreEpisodio.setText("");
        }
            
    }//GEN-LAST:event_btnGuardarEpisodioActionPerformed

    private void ComboBoxListaDeEpisodiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxListaDeEpisodiosActionPerformed
        // TODO add your handling code here:
        String nombreEpisodio = (String)ComboBoxListaDeEpisodios.getSelectedItem();//validar de que un episodio no se repita
        if(nombreEpisodio == null){
            return ;
        }
        listEnemigoVillano.removeAllItems();
        this.recargarListaHeroes();
    }//GEN-LAST:event_ComboBoxListaDeEpisodiosActionPerformed

    private void recargarListaHeroes(){
        Episodio episodio = serie.getEpisodioPorNombre((String) ComboBoxListaDeEpisodios.getSelectedItem());
        
        listEnemigoVillano.removeAllItems();
        
        for(Personaje personaje: episodio.getHeroes()){
            listEnemigoVillano.addItem(personaje.getNombre());
        }
    }
    
    private void recargarEpisodios(){
        DefaultTableModel tabla = (DefaultTableModel) tablaDeEpisodios.getModel();
        tabla.setRowCount(0);
        
        ComboBoxListaDeEpisodios.removeAllItems();
        // rellena nuevamente la tabla con la el ArrayList de episodios
        for (Episodio episodio : this.serie.getEpisodios()) {
            // TODO: entender como se llena la tabla
            Object[] row = {episodio.getNombre(), episodio.calcularCosto()};
            
            tabla.addRow(row);
            ComboBoxListaDeEpisodios.addItem(episodio.getNombre());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaSerie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChechBoxPerteneceALiga;
    private javax.swing.JComboBox<String> ComboBoxListaDeEpisodios;
    private javax.swing.JTextArea TextFieldHabilidadHeroe;
    private javax.swing.JTextField TextFieldNombreEpisodio;
    private javax.swing.JButton btnAgregarHabilidadHeroe;
    private javax.swing.JButton btnGuardarEpisodio;
    private javax.swing.JButton btnGuardarHeroe;
    private javax.swing.JButton btnGuardarVillano;
    private javax.swing.JLabel cantidadDeEpisodios;
    private javax.swing.JCheckBox checkBoxUsaArma;
    private javax.swing.JTextArea debilidadHeroe;
    private javax.swing.JTextArea descripcionAtaqueVillano;
    private javax.swing.JTextField identidadSecretaHeroe;
    private javax.swing.JTextField identidadSecretaVillano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelCantEpisodios;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelAgregarEpisodio;
    private javax.swing.JPanel jPanelAgregarPersonaje;
    private javax.swing.JPanel jPanelEpisodios;
    private javax.swing.JTabbedPane jPanelPestañasEpisodio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedAgregarPersonaje;
    private javax.swing.JTabbedPane jTabbedHabilidadHeroe;
    private javax.swing.JComboBox<String> listEnemigoVillano;
    private javax.swing.JTable listaHabildadesHeroe;
    private javax.swing.JTextField nombreHeroe;
    private javax.swing.JLabel nombreSerie;
    private javax.swing.JTextField nombreVillano;
    private javax.swing.JTable tablaDeEpisodios;
    // End of variables declaration//GEN-END:variables
}
